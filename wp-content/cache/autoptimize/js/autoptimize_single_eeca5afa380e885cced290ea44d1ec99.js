;
/*! jQuery Google Maps Store Locator - v2.7.4 - 2017-06-12
* http://www.bjornblog.com/web/jquery-store-locator-plugin
* Copyright (c) 2017 Bjorn Holine; Licensed MIT */
(function($,window,document,undefined){'use strict';var pluginName='storeLocator';if(typeof $.fn[pluginName]!=='undefined'||typeof google==='undefined'){return;}
var $this,map,listTemplate,infowindowTemplate,dataTypeRead,originalOrigin,originalData,originalZoom,dataRequest,searchInput,addressInput,olat,olng,storeNum,directionsDisplay,directionsService,prevSelectedMarkerBefore,prevSelectedMarkerAfter,firstRun;var featuredset=[],locationset=[],normalset=[],markers=[];var filters={},locationData={},GeoCodeCalc={},mappingObj={};var defaults={'mapID':'bh-sl-map','locationList':'bh-sl-loc-list','formContainer':'bh-sl-form-container','formID':'bh-sl-user-location','addressID':'bh-sl-address','regionID':'bh-sl-region','mapSettings':{mapTypeId:google.maps.MapTypeId.ROADMAP,zoom:200},'markerImg':null,'markerDim':null,'catMarkers':null,'selectedMarkerImg':null,'selectedMarkerImgDim':null,'disableAlphaMarkers':false,'lengthUnit':'m','storeLimit':20,'distanceAlert':-1,'dataType':'json','dataLocation':'https://www.funerariahogardecristo.cl/sucursales-json','dataRaw':null,'xmlElement':'marker','listColor1':'#ffffff','listColor2':'#eeeeee','originMarker':false,'originMarkerImg':null,'originMarkerDim':null,'bounceMarker':true,'slideMap':true,'modal':false,'overlay':'bh-sl-overlay','modalWindow':'bh-sl-modal-window','modalContent':'bh-sl-modal-content','closeIcon':'bh-sl-close-icon','defaultLoc':false,'defaultLat':null,'defaultLng':null,'autoComplete':false,'autoCompleteOptions':{},'autoCompleteDisableListener':false,'autoGeocode':false,'geocodeID':null,'maxDistance':200,'maxDistanceID':'bh-sl-maxdistance','fullMapStart':true,'fullMapStartBlank':false,'fullMapStartListLimit':false,'noForm':false,'loading':false,'loadingContainer':'bh-sl-loading','featuredLocations':false,'pagination':false,'locationsPerPage':20,'inlineDirections':false,'nameSearch':false,'searchID':'bh-sl-search','nameAttribute':'name','visibleMarkersList':false,'dragSearch':false,'infowindowTemplatePath':'https://www.funerariahogardecristo.cl/wp-content/themes/divi-child/js/plugins/storelocator/templates/infowindow-description.html','listTemplatePath':'https://www.funerariahogardecristo.cl/wp-content/themes/divi-child/js/plugins/storelocator/templates/location-list-description.html','KMLinfowindowTemplatePath':'https://www.funerariahogardecristo.cl/wp-content/themes/divi-child/js/plugins/storelocator/templates/kml-infowindow-description.html','KMLlistTemplatePath':'https://www.funerariahogardecristo.cl/wp-content/themes/divi-child/js/plugins/storelocator/templates/kml-location-list-description.html','listTemplateID':null,'infowindowTemplateID':null,'taxonomyFilters':null,'taxonomyFiltersContainer':'bh-sl-filters-container','exclusiveFiltering':false,'exclusiveTax':null,'querystringParams':false,'debug':false,'sessionStorage':false,'markerCluster':null,'infoBubble':null,'callbackNotify':null,'callbackRegion':null,'callbackBeforeSend':null,'callbackSuccess':null,'callbackModalOpen':null,'callbackModalReady':null,'callbackModalClose':null,'callbackJsonp':null,'callbackCreateMarker':null,'callbackPageChange':null,'callbackDirectionsRequest':null,'callbackCloseDirections':null,'callbackNoResults':null,'callbackListClick':null,'callbackMarkerClick':null,'callbackFilters':null,'callbackMapSet':null,'addressErrorAlert':'Unable to find address','autoGeocodeErrorAlert':'Automatic location detection failed. Please fill in your address or zip code.','distanceErrorAlert':'Unfortunately, our closest location is more than ','mileLang':'mile','milesLang':'miles','kilometerLang':'kilometer','kilometersLang':'kilometers','noResultsTitle':'No results','noResultsDesc':'No locations were found with the given criteria. Please modify your selections or input.','nextPage':'Next &raquo;','prevPage':'&laquo; Prev'};function Plugin(element,options){$this=$(element);this.element=element;this.settings=$.extend({},defaults,options);this._defaults=defaults;this._name=pluginName;this.init();}
$.extend(Plugin.prototype,{init:function(){var _this=this;this.writeDebug('init');if(this.settings.lengthUnit==='km'){GeoCodeCalc.EarthRadius=6367.0;}
else{GeoCodeCalc.EarthRadius=3956.0;}
if(this.settings.dataType==='kml'){dataTypeRead='xml';}
else{dataTypeRead=this.settings.dataType;}
if(this.settings.inlineDirections===true){$('.'+this.settings.locationList).prepend('<div class="bh-sl-directions-panel"></div>');}
originalZoom=this.settings.mapSettings.zoom;Handlebars.registerHelper('niceURL',function(url){if(url){return url.replace('https://','').replace('http://','');}});if(this.settings.taxonomyFilters!==null){this.taxonomyFiltering();}
if(this.settings.modal===true){if(this.settings.taxonomyFilters!==null){$('.'+this.settings.taxonomyFiltersContainer).clone(true,true).prependTo($this);}
$this.wrap('<div class="'+this.settings.overlay+'"><div class="'+this.settings.modalWindow+'"><div class="'+this.settings.modalContent+'">');$('.'+this.settings.modalWindow).prepend('<div class="'+this.settings.closeIcon+'"></div>');$('.'+this.settings.overlay).hide();}
if(this.settings.autoComplete===true){var searchInput=document.getElementById(this.settings.addressID);var autoPlaces=new google.maps.places.Autocomplete(searchInput,this.settings.autoCompleteOptions);if(this.settings.autoComplete===true&&this.settings.autoCompleteDisableListener!==true){autoPlaces.addListener('place_changed',function(e){_this.processForm(e);});}}
this._loadTemplates();},destroy:function(){this.writeDebug('destroy');this.reset();var $mapDiv=$('#'+this.settings.mapID);if(markers.length){for(var i=0;i<=markers.length;i++){google.maps.event.removeListener(markers[i]);}}
$('.'+this.settings.locationList+' ul').empty();if($mapDiv.hasClass('bh-sl-map-open')){$mapDiv.empty().removeClass('bh-sl-map-open');}
if(this.settings.modal===true){$('. '+this.settings.overlay).remove();}
$mapDiv.attr('style','');$this.hide();$.removeData($this.get(0));$(document).off(pluginName);$this.unbind();},reset:function(){this.writeDebug('reset');locationset=[];featuredset=[];normalset=[];markers=[];firstRun=false;$(document).off('click.'+pluginName,'.'+this.settings.locationList+' li');if($('.'+this.settings.locationList+' .bh-sl-close-directions-container').length){$('.bh-sl-close-directions-container').remove();}
if(this.settings.inlineDirections===true){var $adp=$('.'+this.settings.locationList+' .adp');if($adp.length>0){$adp.remove();$('.'+this.settings.locationList+' ul').fadeIn();}
$(document).off('click','.'+this.settings.locationList+' li .loc-directions a');}
if(this.settings.pagination===true){$(document).off('click.'+pluginName,'.bh-sl-pagination li');}},formFiltersReset:function(){this.writeDebug('formFiltersReset');if(this.settings.taxonomyFilters===null){return;}
var $inputs=$('.'+this.settings.taxonomyFiltersContainer+' input'),$selects=$('.'+this.settings.taxonomyFiltersContainer+' select');if(typeof($inputs)!=='object'){return;}
$inputs.each(function(){if($(this).is('input[type="checkbox"]')||$(this).is('input[type="radio"]')){$(this).prop('checked',false);}});$selects.each(function(){$(this).prop('selectedIndex',0);});},mapReload:function(){this.writeDebug('mapReload');this.reset();if(this.settings.taxonomyFilters!==null){this.formFiltersReset();this.taxonomyFiltersInit();}
if((olat)&&(olng)){this.settings.mapSettings.zoom=originalZoom;this.processForm();}
else{this.mapping(mappingObj);}},notify:function(notifyText){this.writeDebug('notify',notifyText);if(this.settings.callbackNotify){this.settings.callbackNotify.call(this,notifyText);}
else{alert(notifyText);}},geoCodeCalcToRadian:function(v){this.writeDebug('geoCodeCalcToRadian',v);return v*(Math.PI/180);},geoCodeCalcDiffRadian:function(v1,v2){this.writeDebug('geoCodeCalcDiffRadian',arguments);return this.geoCodeCalcToRadian(v2)-this.geoCodeCalcToRadian(v1);},geoCodeCalcCalcDistance:function(lat1,lng1,lat2,lng2,radius){this.writeDebug('geoCodeCalcCalcDistance',arguments);return radius*2*Math.asin(Math.min(1,Math.sqrt((Math.pow(Math.sin((this.geoCodeCalcDiffRadian(lat1,lat2))/2.0),2.0)+Math.cos(this.geoCodeCalcToRadian(lat1))*Math.cos(this.geoCodeCalcToRadian(lat2))*Math.pow(Math.sin((this.geoCodeCalcDiffRadian(lng1,lng2))/2.0),2.0)))));},getQueryString:function(param){this.writeDebug('getQueryString',param);if(param){param=param.replace(/[\[]/,'\\[').replace(/[\]]/,'\\]');var regex=new RegExp('[\\?&]'+param+'=([^&#]*)'),results=regex.exec(location.search);return(results===null)?'':decodeURIComponent(results[1].replace(/\+/g,' '));}},getMap:function(){return this.map;},_loadTemplates:function(){this.writeDebug('_loadTemplates');var source;var _this=this;var templateError='<div class="bh-sl-error">Error: Could not load plugin templates. Check the paths and ensure they have been uploaded. Paths will be wrong if you do not run this from a web server.</div>';if(this.settings.dataType==='kml'&&this.settings.listTemplateID===null&&this.settings.infowindowTemplateID===null){$.when($.get(this.settings.KMLinfowindowTemplatePath,function(template){source=template;infowindowTemplate=Handlebars.compile(source);}),$.get(this.settings.KMLlistTemplatePath,function(template){source=template;listTemplate=Handlebars.compile(source);})).then(function(){_this.locator();},function(){$('.'+_this.settings.formContainer).append(templateError);throw new Error('Could not load storeLocator plugin templates');});}
else if(this.settings.listTemplateID!==null&&this.settings.infowindowTemplateID!==null){infowindowTemplate=Handlebars.compile($('#'+this.settings.infowindowTemplateID).html());listTemplate=Handlebars.compile($('#'+this.settings.listTemplateID).html());_this.locator();}
else{$.when($.get(this.settings.infowindowTemplatePath,function(template){source=template;infowindowTemplate=Handlebars.compile(source);}),$.get(this.settings.listTemplatePath,function(template){source=template;listTemplate=Handlebars.compile(source);})).then(function(){_this.locator();},function(){$('.'+_this.settings.formContainer).append(templateError);throw new Error('Could not load storeLocator plugin templates');});}},locator:function(){this.writeDebug('locator');if(this.settings.slideMap===true){$this.hide();}
this._start();this._formEventHandler();},_formEventHandler:function(){this.writeDebug('_formEventHandler');var _this=this;if(this.settings.noForm===true){$(document).on('click.'+pluginName,'.'+this.settings.formContainer+' button',function(e){_this.processForm(e);});$(document).on('keydown.'+pluginName,function(e){if(e.keyCode===13&&$('#'+_this.settings.addressID).is(':focus')){_this.processForm(e);}});}
else{$(document).on('submit.'+pluginName,'#'+this.settings.formID,function(e){_this.processForm(e);});}
if($('.bh-sl-reset').length&&$('#'+this.settings.mapID).length){$(document).on('click.'+pluginName,'.bh-sl-reset',function(){_this.mapReload();});}},_getData:function(lat,lng,address,geocodeData){this.writeDebug('_getData',arguments);var _this=this,northEast='',southWest='',formattedAddress='';if(typeof geocodeData!=='undefined'&&typeof geocodeData.geometry.bounds!=='undefined'){formattedAddress=geocodeData.formatted_address;northEast=JSON.stringify(geocodeData.geometry.bounds.getNorthEast());southWest=JSON.stringify(geocodeData.geometry.bounds.getSouthWest());}
if(this.settings.callbackBeforeSend){this.settings.callbackBeforeSend.call(this,lat,lng,address,formattedAddress,northEast,southWest);}
if(_this.settings.dataRaw!==null){if(dataTypeRead==='xml'){return $.parseXML(_this.settings.dataRaw);}
else if(dataTypeRead==='json'){if(Array.isArray&&Array.isArray(_this.settings.dataRaw)){return _this.settings.dataRaw;}
else if(typeof _this.settings.dataRaw==='string'){return $.parseJSON(_this.settings.dataRaw);}
else{return[];}}}
else{var d=$.Deferred();if(this.settings.loading===true){$('.'+this.settings.formContainer).append('<div class="'+this.settings.loadingContainer+'"></div>');}
$.ajax({type:'GET',url:this.settings.dataLocation+(this.settings.dataType==='jsonp'?(this.settings.dataLocation.match(/\?/)?'&':'?')+'callback=?':''),data:{'origLat':lat,'origLng':lng,'origAddress':address,'formattedAddress':formattedAddress,'boundsNorthEast':northEast,'boundsSouthWest':southWest},dataType:dataTypeRead,jsonpCallback:(this.settings.dataType==='jsonp'?this.settings.callbackJsonp:null)}).done(function(p){d.resolve(p);if(_this.settings.loading===true){$('.'+_this.settings.formContainer+' .'+_this.settings.loadingContainer).remove();}}).fail(d.reject);return d.promise();}},_start:function(){this.writeDebug('_start');var _this=this,doAutoGeo=this.settings.autoGeocode,latlng,originAddress;if(_this.settings.fullMapStartBlank!==false){var $mapDiv=$('#'+_this.settings.mapID);$mapDiv.addClass('bh-sl-map-open');var myOptions=_this.settings.mapSettings;myOptions.zoom=_this.settings.fullMapStartBlank;latlng=new google.maps.LatLng(this.settings.defaultLat,this.settings.defaultLng);myOptions.center=latlng;_this.map=new google.maps.Map(document.getElementById(_this.settings.mapID),myOptions);google.maps.event.addDomListener(window,'resize',function(){var center=_this.map.getCenter();google.maps.event.trigger(_this.map,'resize');_this.map.setCenter(center);});_this.settings.fullMapStartBlank=false;myOptions.zoom=originalZoom;}
else{if(this.settings.defaultLoc===true){this.defaultLocation();}
if($.trim($('#'+this.settings.addressID).val())!==''){_this.writeDebug('Using Address Field');_this.processForm(null);doAutoGeo=false;}
else if(this.settings.fullMapStart===true){if((this.settings.querystringParams===true&&this.getQueryString(this.settings.addressID))||(this.settings.querystringParams===true&&this.getQueryString(this.settings.searchID))||(this.settings.querystringParams===true&&this.getQueryString(this.settings.maxDistanceID))){_this.writeDebug('Using Query String');this.processForm(null);doAutoGeo=false;}
else{this.mapping(null);}}
if(this.settings.autoGeocode===true&&doAutoGeo===true){_this.writeDebug('Auto Geo');_this.htmlGeocode();}
if(this.settings.autoGeocode!==null){_this.writeDebug('Button Geo');$(document).on('click.'+pluginName,'#'+this.settings.geocodeID,function(){_this.htmlGeocode();});}}},htmlGeocode:function(){this.writeDebug('htmlGeocode',arguments);var _this=this;if(this.settings.sessionStorage===true&&window.sessionStorage&&window.sessionStorage.getItem('myGeo')){this.writeDebug('Using Session Saved Values for GEO');this.autoGeocodeQuery(JSON.parse(window.sessionStorage.getItem('myGeo')));return false;}
else if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){_this.writeDebug('Current Position Result');var pos={coords:{latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy}};if(_this.settings.sessionStorage===true&&window.sessionStorage){window.sessionStorage.setItem('myGeo',JSON.stringify(pos));}
_this.autoGeocodeQuery(pos);},function(error){_this._autoGeocodeError(error);});}},googleGeocode:function(thisObj){thisObj.writeDebug('googleGeocode',arguments);var _this=thisObj;var geocoder=new google.maps.Geocoder();this.geocode=function(request,callbackFunction){geocoder.geocode(request,function(results,status){if(status===google.maps.GeocoderStatus.OK){var result={};result.latitude=results[0].geometry.location.lat();result.longitude=results[0].geometry.location.lng();result.geocodeResult=results[0];callbackFunction(result);}else{callbackFunction(null);throw new Error('Geocode was not successful for the following reason: '+status);}});};},reverseGoogleGeocode:function(thisObj){thisObj.writeDebug('reverseGoogleGeocode',arguments);var _this=thisObj;var geocoder=new google.maps.Geocoder();this.geocode=function(request,callbackFunction){geocoder.geocode(request,function(results,status){if(status===google.maps.GeocoderStatus.OK){if(results[0]){var result={};result.address=results[0].formatted_address;callbackFunction(result);}}else{callbackFunction(null);throw new Error('Reverse geocode was not successful for the following reason: '+status);}});};},roundNumber:function(num,dec){this.writeDebug('roundNumber',arguments);return Math.round(num*Math.pow(10,dec))/Math.pow(10,dec);},isEmptyObject:function(obj){this.writeDebug('isEmptyObject',arguments);for(var key in obj){if(obj.hasOwnProperty(key)){return false;}}
return true;},hasEmptyObjectVals:function(obj){this.writeDebug('hasEmptyObjectVals',arguments);var objTest=true;for(var key in obj){if(obj.hasOwnProperty(key)){if(obj[key]!==''&&obj[key].length!==0){objTest=false;}}}
return objTest;},modalClose:function(){this.writeDebug('modalClose');if(this.settings.callbackModalClose){this.settings.callbackModalClose.call(this);}
filters={};$('.'+this.settings.overlay+' select').prop('selectedIndex',0);$('.'+this.settings.overlay+' input').prop('checked',false);$('.'+this.settings.overlay).hide();},_createLocationVariables:function(loopcount){this.writeDebug('_createLocationVariables',arguments);var value;locationData={};for(var key in locationset[loopcount]){if(locationset[loopcount].hasOwnProperty(key)){value=locationset[loopcount][key];if(key==='distance'){value=this.roundNumber(value,2);}
locationData[key]=value;}}},sortNumerically:function(locationsarray){this.writeDebug('sortNumerically',arguments);locationsarray.sort(function(a,b){return((a.distance<b.distance)?-1:((a.distance>b.distance)?1:0));});},filterData:function(data,filters){this.writeDebug('filterData',arguments);var filterTest=true;for(var k in filters){if(filters.hasOwnProperty(k)){if(this.settings.exclusiveFiltering===true||(this.settings.exclusiveTax!==null&&Array.isArray(this.settings.exclusiveTax)&&this.settings.exclusiveTax.indexOf(k)!==-1)){var filterTests=filters[k];var exclusiveTest=[];if(typeof data[k]!=='undefined'){for(var l=0;l<filterTests.length;l++){exclusiveTest[l]=new RegExp(filterTests[l],'i').test(data[k].replace(/([^\x00-\x7F]|[.*+?^=!:${}()|\[\]\/\\])/g,''));}}
if(exclusiveTest.indexOf(true)===-1){filterTest=false;}}
else{if(typeof data[k]==='undefined'||!(new RegExp(filters[k].join(''),'i').test(data[k].replace(/([^\x00-\x7F]|[.*+?^=!:${}()|\[\]\/\\])/g,'')))){filterTest=false;}}}}
if(filterTest){return true;}},_paginationOutput:function(currentPage,totalPages){this.writeDebug('_paginationOutput',arguments);currentPage=parseFloat(currentPage);var output='';var nextPage=currentPage+1;var prevPage=currentPage-1;if(currentPage>0){output+='<li class="bh-sl-next-prev" data-page="'+prevPage+'">'+this.settings.prevPage+'</li>';}
for(var p=0;p<Math.ceil(totalPages);p++){var n=p+1;if(p===currentPage){output+='<li class="bh-sl-current" data-page="'+p+'">'+n+'</li>';}
else{output+='<li data-page="'+p+'">'+n+'</li>';}}
if(nextPage<totalPages){output+='<li class="bh-sl-next-prev" data-page="'+nextPage+'">'+this.settings.nextPage+'</li>';}
return output;},paginationSetup:function(currentPage){this.writeDebug('paginationSetup',arguments);var pagesOutput='';var totalPages;var $paginationList=$('.bh-sl-pagination-container .bh-sl-pagination');if(this.settings.storeLimit===-1||locationset.length<this.settings.storeLimit){totalPages=locationset.length/this.settings.locationsPerPage;}else{totalPages=this.settings.storeLimit/this.settings.locationsPerPage;}
if(typeof currentPage==='undefined'){currentPage=0;}
if($paginationList.length===0){pagesOutput=this._paginationOutput(currentPage,totalPages);}
else{$paginationList.empty();pagesOutput=this._paginationOutput(currentPage,totalPages);}
$paginationList.append(pagesOutput);},markerImage:function(markerUrl,markerWidth,markerHeight){this.writeDebug('markerImage',arguments);var markerImg;if(typeof markerWidth!=='undefined'&&typeof markerHeight!=='undefined'){markerImg={url:markerUrl,size:new google.maps.Size(markerWidth,markerHeight),scaledSize:new google.maps.Size(markerWidth,markerHeight)};}
else{markerImg={url:markerUrl,size:new google.maps.Size(32,32),scaledSize:new google.maps.Size(32,32)};}
return markerImg;},createMarker:function(point,name,address,letter,map,category){this.writeDebug('createMarker',arguments);var marker,markerImg,letterMarkerImg;var categories=[];if(this.settings.catMarkers!==null){if(typeof category!=='undefined'){if(category.indexOf(',')!==-1){categories=category.split(',');for(var i=0;i<categories.length;i++){if(categories[i]in this.settings.catMarkers){markerImg=this.markerImage(this.settings.catMarkers[categories[i]][0],parseInt(this.settings.catMarkers[categories[i]][1]),parseInt(this.settings.catMarkers[categories[i]][2]));}}}
else{if(category in this.settings.catMarkers){markerImg=this.markerImage(this.settings.catMarkers[category][0],parseInt(this.settings.catMarkers[category][1]),parseInt(this.settings.catMarkers[category][2]));}}}}
if(this.settings.markerImg!==null){if(this.settings.markerDim===null){markerImg=this.markerImage(this.settings.markerImg);}
else{markerImg=this.markerImage(this.settings.markerImg,this.settings.markerDim.width,this.settings.markerDim.height);}}
if(this.settings.callbackCreateMarker){marker=this.settings.callbackCreateMarker.call(this,map,point,letter,category);}
else{if(this.settings.disableAlphaMarkers===true||this.settings.storeLimit===-1||this.settings.storeLimit>26||this.settings.catMarkers!==null||this.settings.markerImg!==null||(this.settings.fullMapStart===true&&firstRun===true&&(isNaN(this.settings.fullMapStartListLimit)||this.settings.fullMapStartListLimit>26||this.settings.fullMapStartListLimit===-1))){marker=new google.maps.Marker({position:point,map:map,draggable:false,icon:markerImg});}
else{letterMarkerImg={url:'https://mt.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-b.png&text='+letter+'&psize=16&font=fonts/Roboto-Regular.ttf&color=ff333333&ax=44&ay=48'};marker=new google.maps.Marker({position:point,map:map,icon:letterMarkerImg,draggable:false});}}
return marker;},_defineLocationData:function(currentMarker,storeStart,page){this.writeDebug('_defineLocationData',arguments);var indicator='';this._createLocationVariables(currentMarker.get('id'));var distLength;if(locationData.distance<=1){if(this.settings.lengthUnit==='km'){distLength=this.settings.kilometerLang;}
else{distLength=this.settings.mileLang;}}
else{if(this.settings.lengthUnit==='km'){distLength=this.settings.kilometersLang;}
else{distLength=this.settings.milesLang;}}
var markerId=currentMarker.get('id');if(this.settings.disableAlphaMarkers===true||this.settings.storeLimit===-1||this.settings.storeLimit>26||(this.settings.fullMapStart===true&&firstRun===true&&(isNaN(this.settings.fullMapStartListLimit)||this.settings.fullMapStartListLimit>26||this.settings.fullMapStartListLimit===-1))){indicator=markerId+1;}
else{if(page>0){indicator=String.fromCharCode('A'.charCodeAt(0)+(storeStart+markerId));}
else{indicator=String.fromCharCode('A'.charCodeAt(0)+markerId);}}
return{location:[$.extend(locationData,{'markerid':markerId,'marker':indicator,'length':distLength,'origin':originalOrigin})]};},listSetup:function(marker,storeStart,page){this.writeDebug('listSetup',arguments);var locations=this._defineLocationData(marker,storeStart,page);var listHtml=listTemplate(locations);$('.'+this.settings.locationList+' > ul').append(listHtml);},changeSelectedMarker:function(marker){var markerImg;if(typeof prevSelectedMarkerAfter!=='undefined'){prevSelectedMarkerAfter.setIcon(prevSelectedMarkerBefore);}
if(this.settings.selectedMarkerImgDim===null){markerImg=this.markerImage(this.settings.selectedMarkerImg);}else{markerImg=this.markerImage(this.settings.selectedMarkerImg,this.settings.selectedMarkerImgDim.width,this.settings.selectedMarkerImgDim.height);}
prevSelectedMarkerBefore=marker.icon;marker.setIcon(markerImg);prevSelectedMarkerAfter=marker;},createInfowindow:function(marker,location,infowindow,storeStart,page){this.writeDebug('createInfowindow',arguments);var _this=this;var locations=this._defineLocationData(marker,storeStart,page);var formattedAddress=infowindowTemplate(locations);if(location==='left'){infowindow.setContent(formattedAddress);infowindow.open(marker.get('map'),marker);}
else{google.maps.event.addListener(marker,'click',function(){infowindow.setContent(formattedAddress);infowindow.open(marker.get('map'),marker);var markerId=marker.get('id');var $selectedLocation=$('.'+_this.settings.locationList+' li[data-markerid='+markerId+']');if($selectedLocation.length>0){if(_this.settings.callbackMarkerClick){_this.settings.callbackMarkerClick.call(this,marker,markerId,$selectedLocation,locationset[markerId]);}
$('.'+_this.settings.locationList+' li').removeClass('list-focus');$selectedLocation.addClass('list-focus');var $container=$('.'+_this.settings.locationList);$container.animate({scrollTop:$selectedLocation.offset().top-$container.offset().top+$container.scrollTop()});}
if(_this.settings.selectedMarkerImg!==null){_this.changeSelectedMarker(marker);}});}},autoGeocodeQuery:function(position){this.writeDebug('autoGeocodeQuery',arguments);var _this=this,distance=null,$distanceInput=$('#'+this.settings.maxDistanceID),originAddress;if(this.settings.querystringParams===true){if(this.getQueryString(this.settings.maxDistanceID)){distance=this.getQueryString(this.settings.maxDistanceID);if($distanceInput.val()!==''){distance=$distanceInput.val();}}
else{if(this.settings.maxDistance===true){distance=$distanceInput.val()||'';}}}
else{if(this.settings.maxDistance===true){distance=$distanceInput.val()||'';}}
var r=new this.reverseGoogleGeocode(this);var latlng=new google.maps.LatLng(position.coords.latitude,position.coords.longitude);r.geocode({'latLng':latlng},function(data){if(data!==null){originAddress=addressInput=data.address;olat=mappingObj.lat=position.coords.latitude;olng=mappingObj.lng=position.coords.longitude;mappingObj.origin=originAddress;mappingObj.distance=distance;_this.mapping(mappingObj);}else{_this.notify(_this.settings.addressErrorAlert);}});},_autoGeocodeError:function(){this.writeDebug('_autoGeocodeError');this.notify(this.settings.autoGeocodeErrorAlert);},defaultLocation:function(){this.writeDebug('defaultLocation');var _this=this,distance=null,$distanceInput=$('#'+this.settings.maxDistanceID),originAddress;if(this.settings.querystringParams===true){if(this.getQueryString(this.settings.maxDistanceID)){distance=this.getQueryString(this.settings.maxDistanceID);if($distanceInput.val()!==''){distance=$distanceInput.val();}}
else{if(this.settings.maxDistance===true){distance=$distanceInput.val()||'';}}}
else{if(this.settings.maxDistance===true){distance=$distanceInput.val()||'';}}
var r=new this.reverseGoogleGeocode(this);var latlng=new google.maps.LatLng(this.settings.defaultLat,this.settings.defaultLng);r.geocode({'latLng':latlng},function(data){if(data!==null){originAddress=addressInput=data.address;olat=mappingObj.lat=_this.settings.defaultLat;olng=mappingObj.lng=_this.settings.defaultLng;mappingObj.distance=distance;mappingObj.origin=originAddress;_this.mapping(mappingObj);}else{_this.notify(_this.settings.addressErrorAlert);}});},paginationChange:function(newPage){this.writeDebug('paginationChange',arguments);if(this.settings.callbackPageChange){this.settings.callbackPageChange.call(this,newPage);}
mappingObj.page=newPage;this.mapping(mappingObj);},getAddressByMarker:function(markerID){this.writeDebug('getAddressByMarker',arguments);var formattedAddress="";if(locationset[markerID].address){formattedAddress+=locationset[markerID].address+' ';}
if(locationset[markerID].address2){formattedAddress+=locationset[markerID].address2+' ';}
if(locationset[markerID].city){formattedAddress+=locationset[markerID].city+', ';}
if(locationset[markerID].state){formattedAddress+=locationset[markerID].state+' ';}
if(locationset[markerID].postal){formattedAddress+=locationset[markerID].postal+' ';}
if(locationset[markerID].country){formattedAddress+=locationset[markerID].country+' ';}
return formattedAddress;},clearMarkers:function(){this.writeDebug('clearMarkers');var locationsLimit=null;if(locationset.length<this.settings.storeLimit){locationsLimit=locationset.length;}
else{locationsLimit=this.settings.storeLimit;}
for(var i=0;i<locationsLimit;i++){markers[i].setMap(null);}},directionsRequest:function(origin,locID,map){this.writeDebug('directionsRequest',arguments);if(this.settings.callbackDirectionsRequest){this.settings.callbackDirectionsRequest.call(this,origin,locID,map);}
var destination=this.getAddressByMarker(locID);if(destination){$('.'+this.settings.locationList+' ul').hide();this.clearMarkers();if(directionsDisplay!==null&&typeof directionsDisplay!=='undefined'){directionsDisplay.setMap(null);directionsDisplay=null;}
directionsDisplay=new google.maps.DirectionsRenderer();directionsService=new google.maps.DirectionsService();directionsDisplay.setMap(map);directionsDisplay.setPanel($('.bh-sl-directions-panel').get(0));var request={origin:origin,destination:destination,travelMode:google.maps.TravelMode.DRIVING};directionsService.route(request,function(response,status){if(status===google.maps.DirectionsStatus.OK){directionsDisplay.setDirections(response);}});$('.'+this.settings.locationList).prepend('<div class="bh-sl-close-directions-container"><div class="'+this.settings.closeIcon+'"></div></div>');}
$(document).off('click','.'+this.settings.locationList+' li .loc-directions a');},closeDirections:function(){this.writeDebug('closeDirections');if(this.settings.callbackCloseDirections){this.settings.callbackCloseDirections.call(this);}
this.reset();if((olat)&&(olng)){if(this.countFilters()===0){this.settings.mapSettings.zoom=originalZoom;}
else{this.settings.mapSettings.zoom=0;}
this.processForm(null);}
$(document).off('click.'+pluginName,'.'+this.settings.locationList+' .bh-sl-close-icon');},processForm:function(e){this.writeDebug('processForm',arguments);var _this=this,distance=null,$addressInput=$('#'+this.settings.addressID),$searchInput=$('#'+this.settings.searchID),$distanceInput=$('#'+this.settings.maxDistanceID),region='';if(typeof e!=='undefined'&&e!==null){e.preventDefault();}
$('.'+_this.settings.formContainer+' input, .'+_this.settings.formContainer+' select').blur();if(this.settings.querystringParams===true){if(this.getQueryString(this.settings.addressID)||this.getQueryString(this.settings.searchID)||this.getQueryString(this.settings.maxDistanceID)){addressInput=this.getQueryString(this.settings.addressID);searchInput=this.getQueryString(this.settings.searchID);distance=this.getQueryString(this.settings.maxDistanceID);if($addressInput.val()!==''){addressInput=$addressInput.val();}
if($searchInput.val()!==''){searchInput=$searchInput.val();}
if($distanceInput.val()!==''){distance=$distanceInput.val();}}
else{addressInput=$addressInput.val()||'';searchInput=$searchInput.val()||'';if(this.settings.maxDistance===true){distance=$distanceInput.val()||'';}}}
else{addressInput=$addressInput.val()||'';searchInput=$searchInput.val()||'';if(this.settings.maxDistance===true){distance=$distanceInput.val()||'';}}
if(this.settings.callbackRegion){region=this.settings.callbackRegion.call(this,addressInput,searchInput,distance);}else{region=$('#'+this.settings.regionID).val();}
if(addressInput===''&&searchInput===''){this._start();}
else if(addressInput!==''){if(typeof originalOrigin!=='undefined'&&typeof olat!=='undefined'&&typeof olng!=='undefined'&&(addressInput===originalOrigin)){mappingObj.lat=olat;mappingObj.lng=olng;mappingObj.origin=addressInput;mappingObj.name=searchInput;mappingObj.distance=distance;_this.mapping(mappingObj);}
else{var g=new this.googleGeocode(this);g.geocode({'address':addressInput,'region':region},function(data){if(data!==null){olat=data.latitude;olng=data.longitude;mappingObj.lat=olat;mappingObj.lng=olng;mappingObj.origin=addressInput;mappingObj.name=searchInput;mappingObj.distance=distance;mappingObj.geocodeResult=data.geocodeResult;_this.mapping(mappingObj);}else{_this.notify(_this.settings.addressErrorAlert);}});}}
else if(searchInput!==''){if(addressInput===''){delete mappingObj.origin;}
mappingObj.name=searchInput;_this.mapping(mappingObj);}},locationsSetup:function(data,lat,lng,origin,maxDistance){this.writeDebug('locationsSetup',arguments);if(typeof origin!=='undefined'){if(!data.distance){data.distance=this.geoCodeCalcCalcDistance(lat,lng,data.lat,data.lng,GeoCodeCalc.EarthRadius);}}
if(this.settings.maxDistance===true&&typeof maxDistance!=='undefined'&&maxDistance!==null){if(data.distance<=maxDistance){locationset.push(data);}
else{return;}}
else if(this.settings.maxDistance===true&&this.settings.querystringParams===true&&typeof maxDistance!=='undefined'&&maxDistance!==null){if(data.distance<=maxDistance){locationset.push(data);}
else{return;}}
else{locationset.push(data);}},countFilters:function(){this.writeDebug('countFilters');var filterCount=0;if(!this.isEmptyObject(filters)){for(var key in filters){if(filters.hasOwnProperty(key)){filterCount+=filters[key].length;}}}
return filterCount;},_existingCheckedFilters:function(key){this.writeDebug('_existingCheckedFilters',arguments);$('#'+this.settings.taxonomyFilters[key]+' input[type=checkbox]').each(function(){if($(this).prop('checked')){var filterVal=$(this).val();if(typeof filterVal!=='undefined'&&filterVal!==''&&filters[key].indexOf(filterVal)===-1){filters[key].push(filterVal);}}});},_existingSelectedFilters:function(key){this.writeDebug('_existingSelectedFilters',arguments);$('#'+this.settings.taxonomyFilters[key]+' select').each(function(){var filterVal=$(this).val();if(typeof filterVal!=='undefined'&&filterVal!==''&&filters[key].indexOf(filterVal)===-1){filters[key]=[filterVal];}});},_existingRadioFilters:function(key){this.writeDebug('_existingRadioFilters',arguments);$('#'+this.settings.taxonomyFilters[key]+' input[type=radio]').each(function(){if($(this).prop('checked')){var filterVal=$(this).val();if(typeof filterVal!=='undefined'&&filterVal!==''&&filters[key].indexOf(filterVal)===-1){filters[key]=[filterVal];}}});},checkFilters:function(){this.writeDebug('checkFilters');for(var key in this.settings.taxonomyFilters){if(this.settings.taxonomyFilters.hasOwnProperty(key)){this._existingCheckedFilters(key);this._existingSelectedFilters(key);this._existingRadioFilters(key);}}},selectQueryStringFilters:function(taxonomy,value){this.writeDebug('selectQueryStringFilters',arguments);var $taxGroupContainer=$('#'+this.settings.taxonomyFilters[taxonomy]);if($taxGroupContainer.find('input[type="checkbox"]').length){for(var i=0;i<value.length;i++){$taxGroupContainer.find('input:checkbox[value="'+value[i]+'"]').prop('checked',true);}}
if($taxGroupContainer.find('select').length){$taxGroupContainer.find('option[value="'+value[0]+'"]').prop('selected',true);}
if($taxGroupContainer.find('input[type="radio"]').length){$taxGroupContainer.find('input:radio[value="'+value[0]+'"]').prop('checked',true);}},checkQueryStringFilters:function(){this.writeDebug('checkQueryStringFilters',arguments);for(var key in filters){if(filters.hasOwnProperty(key)){var filterVal=this.getQueryString(key);if(filterVal.indexOf(',')!==-1){filterVal=filterVal.split(',');}
if(typeof filterVal!=='undefined'&&filterVal!==''&&filters[key].indexOf(filterVal)===-1){if(Array.isArray(filterVal)){filters[key]=filterVal;}else{filters[key]=[filterVal];}}
if(filters[key].length){this.selectQueryStringFilters(key,filters[key]);}}}},getFilterKey:function(filterContainer){this.writeDebug('getFilterKey',arguments);for(var key in this.settings.taxonomyFilters){if(this.settings.taxonomyFilters.hasOwnProperty(key)){for(var i=0;i<this.settings.taxonomyFilters[key].length;i++){if(this.settings.taxonomyFilters[key]===filterContainer){return key;}}}}},taxonomyFiltersInit:function(){this.writeDebug('taxonomyFiltersInit');for(var key in this.settings.taxonomyFilters){if(this.settings.taxonomyFilters.hasOwnProperty(key)){filters[key]=[];}}},taxonomyFiltering:function(){this.writeDebug('taxonomyFiltering');var _this=this;_this.taxonomyFiltersInit();_this.checkQueryStringFilters();$('.'+this.settings.taxonomyFiltersContainer).on('change.'+pluginName,'input, select',function(e){e.stopPropagation();var filterVal,filterContainer,filterKey;if($(this).is('input[type="checkbox"]')){_this.checkFilters();filterVal=$(this).val();filterContainer=$(this).closest('.bh-sl-filters').attr('id');filterKey=_this.getFilterKey(filterContainer);if(filterKey){if($(this).prop('checked')){if(filters[filterKey].indexOf(filterVal)===-1){filters[filterKey].push(filterVal);}
if($('#'+_this.settings.mapID).hasClass('bh-sl-map-open')===true){if((olat)&&(olng)){_this.settings.mapSettings.zoom=0;_this.processForm();}
else{_this.mapping(mappingObj);}}}
else{var filterIndex=filters[filterKey].indexOf(filterVal);if(filterIndex>-1){filters[filterKey].splice(filterIndex,1);if($('#'+_this.settings.mapID).hasClass('bh-sl-map-open')===true){if((olat)&&(olng)){if(_this.countFilters()===0){_this.settings.mapSettings.zoom=originalZoom;}
else{_this.settings.mapSettings.zoom=0;}
_this.processForm();}
else{_this.mapping(mappingObj);}}}}}}
else if($(this).is('select')||$(this).is('input[type="radio"]')){_this.checkFilters();filterVal=$(this).val();filterContainer=$(this).closest('.bh-sl-filters').attr('id');filterKey=_this.getFilterKey(filterContainer);if(filterVal){if(filterKey){filters[filterKey]=[filterVal];if($('#'+_this.settings.mapID).hasClass('bh-sl-map-open')===true){if((olat)&&(olng)){_this.settings.mapSettings.zoom=0;_this.processForm();}
else{_this.mapping(mappingObj);}}}}
else{if(filterKey){filters[filterKey]=[];}
_this.reset();if((olat)&&(olng)){_this.settings.mapSettings.zoom=originalZoom;_this.processForm();}
else{_this.mapping(mappingObj);}}}});},checkVisibleMarkers:function(markers,map){this.writeDebug('checkVisibleMarkers',arguments);var _this=this;var locations,listHtml;$('.'+this.settings.locationList+' ul').empty();$(markers).each(function(x,marker){if(map.getBounds().contains(marker.getPosition())){_this.listSetup(marker,0,0);listHtml=listTemplate(locations);$('.'+_this.settings.locationList+' > ul').append(listHtml);}});$('.'+this.settings.locationList+' ul li:even').css('background',this.settings.listColor1);$('.'+this.settings.locationList+' ul li:odd').css('background',this.settings.listColor2);},dragSearch:function(map){this.writeDebug('dragSearch',arguments);var newCenter=map.getCenter(),newCenterCoords,_this=this;this.settings.mapSettings.zoom=map.getZoom();olat=mappingObj.lat=newCenter.lat();olng=mappingObj.lng=newCenter.lng();var newAddress=new this.reverseGoogleGeocode(this);newCenterCoords=new google.maps.LatLng(mappingObj.lat,mappingObj.lng);newAddress.geocode({'latLng':newCenterCoords},function(data){if(data!==null){mappingObj.origin=addressInput=data.address;_this.mapping(mappingObj);}else{_this.notify(_this.settings.addressErrorAlert);}});},emptyResult:function(){this.writeDebug('emptyResult',arguments);var center,locList=$('.'+this.settings.locationList+' ul'),myOptions=this.settings.mapSettings,noResults;this.map=new google.maps.Map(document.getElementById(this.settings.mapID),myOptions);if(this.settings.callbackNoResults){this.settings.callbackNoResults.call(this,this.map,myOptions);}
locList.empty();noResults=$('<li><div class="bh-sl-noresults-title">'+this.settings.noResultsTitle+'</div><br><div class="bh-sl-noresults-desc">'+this.settings.noResultsDesc+'</li>').hide().fadeIn();locList.append(noResults);if((olat)&&(olng)){center=new google.maps.LatLng(olat,olng);}else{center=new google.maps.LatLng(0,0);}
this.map.setCenter(center);if(originalZoom){this.map.setZoom(originalZoom);}},originMarker:function(map,origin,originPoint){this.writeDebug('originMarker',arguments);if(this.settings.originMarker!==true){return;}
var marker,originImg='';if(typeof origin!=='undefined'){if(this.settings.originMarkerImg!==null){if(this.settings.originMarkerDim===null){originImg=this.markerImage(this.settings.originMarkerImg);}
else{originImg=this.markerImage(this.settings.originMarkerImg,this.settings.originMarkerDim.width,this.settings.originMarkerDim.height);}}
else{originImg={url:'https://mt.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-a.png'};}
marker=new google.maps.Marker({position:originPoint,map:map,icon:originImg,draggable:false});}},modalWindow:function(){this.writeDebug('modalWindow');if(this.settings.modal!==true){return;}
var _this=this;if(_this.settings.callbackModalOpen){_this.settings.callbackModalOpen.call(this);}
$('.'+_this.settings.overlay).fadeIn();$(document).on('click.'+pluginName,'.'+_this.settings.closeIcon+', .'+_this.settings.overlay,function(){_this.modalClose();});$(document).on('click.'+pluginName,'.'+_this.settings.modalWindow,function(e){e.stopPropagation();});$(document).on('keyup.'+pluginName,function(e){if(e.keyCode===27){_this.modalClose();}});},listClick:function(map,infowindow,storeStart,page){this.writeDebug('listClick',arguments);var _this=this;$(document).on('click.'+pluginName,'.'+_this.settings.locationList+' li',function(){var markerId=$(this).data('markerid');var selectedMarker=markers[markerId];if(_this.settings.callbackListClick){_this.settings.callbackListClick.call(this,markerId,selectedMarker,locationset[markerId]);}
map.panTo(selectedMarker.getPosition());var listLoc='left';if(_this.settings.bounceMarker===true){selectedMarker.setAnimation(google.maps.Animation.BOUNCE);setTimeout(function(){selectedMarker.setAnimation(null);_this.createInfowindow(selectedMarker,listLoc,infowindow,storeStart,page);},700);}
else{_this.createInfowindow(selectedMarker,listLoc,infowindow,storeStart,page);}
if(_this.settings.selectedMarkerImg!==null){_this.changeSelectedMarker(selectedMarker);}
$('.'+_this.settings.locationList+' li').removeClass('list-focus');$('.'+_this.settings.locationList+' li[data-markerid='+markerId+']').addClass('list-focus');});$(document).on('click.'+pluginName,'.'+_this.settings.locationList+' li a',function(e){e.stopPropagation();});},resultsTotalCount:function(locCount){this.writeDebug('resultsTotalCount',arguments);var $resultsContainer=$('.bh-sl-total-results');if(typeof locCount==='undefined'||locCount<=0||$resultsContainer.length===0){return;}
$resultsContainer.text(locCount);},inlineDirections:function(map,origin){this.writeDebug('inlineDirections',arguments);if(this.settings.inlineDirections!==true||typeof origin==='undefined'){return;}
var _this=this;$(document).on('click.'+pluginName,'.'+_this.settings.locationList+' li .loc-directions a',function(e){e.preventDefault();var locID=$(this).closest('li').attr('data-markerid');_this.directionsRequest(origin,locID,map);$(document).on('click.'+pluginName,'.'+_this.settings.locationList+' .bh-sl-close-icon',function(){_this.closeDirections();});});},visibleMarkersList:function(map,markers){this.writeDebug('visibleMarkersList',arguments);if(this.settings.visibleMarkersList!==true){return;}
var _this=this;google.maps.event.addListenerOnce(map,'idle',function(){_this.checkVisibleMarkers(markers,map);});google.maps.event.addListener(map,'center_changed',function(){_this.checkVisibleMarkers(markers,map);});google.maps.event.addListener(map,'zoom_changed',function(){_this.checkVisibleMarkers(markers,map);});},mapping:function(mappingObject){this.writeDebug('mapping',arguments);var _this=this;var orig_lat,orig_lng,geocodeData,origin,originPoint,page;if(!this.isEmptyObject(mappingObject)){orig_lat=mappingObject.lat;orig_lng=mappingObject.lng;geocodeData=mappingObject.geocodeResult;origin=mappingObject.origin;page=mappingObject.page;}
if(_this.settings.pagination===true){if(typeof page==='undefined'||originalOrigin!==addressInput){page=0;}}
if(typeof origin==='undefined'&&this.settings.nameSearch===true){dataRequest=_this._getData();}
else{originPoint=new google.maps.LatLng(orig_lat,orig_lng);if((typeof originalOrigin!=='undefined')&&(origin===originalOrigin)&&(typeof originalData!=='undefined')){origin=originalOrigin;dataRequest=originalData;}
else{dataRequest=_this._getData(olat,olng,origin,geocodeData);}}
if(_this.settings.taxonomyFilters!==null&&_this.hasEmptyObjectVals(filters)){_this.checkFilters();}
if(_this.settings.dataRaw!==null){_this.processData(mappingObject,originPoint,dataRequest,page);}
else{dataRequest.done(function(data){_this.processData(mappingObject,originPoint,data,page);});}},processData:function(mappingObject,originPoint,data,page){this.writeDebug('processData',arguments);var _this=this;var i=0;var orig_lat,orig_lng,origin,name,maxDistance,marker,bounds,storeStart,storeNumToShow,myOptions,distError,openMap,infowindow;var taxFilters={};if(!this.isEmptyObject(mappingObject)){orig_lat=mappingObject.lat;orig_lng=mappingObject.lng;origin=mappingObject.origin;name=mappingObject.name;maxDistance=mappingObject.distance;}
var $mapDiv=$('#'+_this.settings.mapID);var distUnit=(_this.settings.lengthUnit==='km')?_this.settings.kilometersLang:_this.settings.milesLang;originalData=dataRequest;if(typeof origin!=='undefined'){originalOrigin=origin;}
if(_this.settings.callbackSuccess){_this.settings.callbackSuccess.call(this);}
openMap=$mapDiv.hasClass('bh-sl-map-open');if((_this.settings.fullMapStart===true&&openMap===false)||(_this.settings.autoGeocode===true&&openMap===false)||(_this.settings.defaultLoc===true&&openMap===false)){firstRun=true;}
else{_this.reset();}
$mapDiv.addClass('bh-sl-map-open');if(_this.settings.dataType==='json'||_this.settings.dataType==='jsonp'){for(var x=0;i<data.length;x++){var obj=data[x];var locationData={};for(var key in obj){if(obj.hasOwnProperty(key)){locationData[key]=obj[key];}}
_this.locationsSetup(locationData,orig_lat,orig_lng,origin,maxDistance);i++;}}
else if(_this.settings.dataType==='kml'){$(data).find('Placemark').each(function(){var locationData={'name':$(this).find('name').text(),'lat':$(this).find('coordinates').text().split(',')[1],'lng':$(this).find('coordinates').text().split(',')[0],'description':$(this).find('description').text()};_this.locationsSetup(locationData,orig_lat,orig_lng,origin,maxDistance);i++;});}
else{$(data).find(_this.settings.xmlElement).each(function(){var locationData={};for(var key in this.attributes){if(this.attributes.hasOwnProperty(key)){locationData[this.attributes[key].name]=this.attributes[key].value;}}
_this.locationsSetup(locationData,orig_lat,orig_lng,origin,maxDistance);i++;});}
if(_this.settings.nameSearch===true){if(typeof searchInput!=='undefined'){filters[_this.settings.nameAttribute]=[searchInput];}}
if(_this.settings.taxonomyFilters!==null||_this.settings.nameSearch===true){for(var k in filters){if(filters.hasOwnProperty(k)&&filters[k].length>0){for(var z=0;z<filters[k].length;z++){if(!taxFilters[k]){taxFilters[k]=[];}
taxFilters[k][z]='(?=.*\\b'+filters[k][z].replace(/([^\x00-\x7F]|[.*+?^=!:${}()|\[\]\/\\])/g,'')+'\\b)';}}}
if(!_this.isEmptyObject(taxFilters)){locationset=$.grep(locationset,function(val){return _this.filterData(val,taxFilters);});}}
if(typeof origin!=='undefined'){_this.sortNumerically(locationset);}
if(_this.settings.featuredLocations===true){featuredset=$.grep(locationset,function(val){return val.featured==='true';});normalset=$.grep(locationset,function(val){return val.featured!=='true';});locationset=[];locationset=featuredset.concat(normalset);}
if(_this.isEmptyObject(taxFilters)){if(_this.settings.maxDistance===true&&maxDistance){if(typeof locationset[0]==='undefined'||locationset[0].distance>maxDistance){_this.notify(_this.settings.distanceErrorAlert+maxDistance+' '+distUnit);}}
else{if(typeof locationset[0]!=='undefined'){if(_this.settings.distanceAlert!==-1&&locationset[0].distance>_this.settings.distanceAlert){_this.notify(_this.settings.distanceErrorAlert+_this.settings.distanceAlert+' '+distUnit);distError=true;}}
else{throw new Error('No locations found. Please check the dataLocation setting and path.');}}}
if(_this.settings.slideMap===true){$this.slideDown();}
if(_this.isEmptyObject(locationset)||locationset[0].result==='none'){_this.emptyResult();return;}
if(_this.settings.pagination===true){_this.paginationSetup(page);}
_this.modalWindow();if(_this.settings.storeLimit===-1||locationset.length<_this.settings.storeLimit||(this.settings.fullMapStart===true&&firstRun===true&&(!isNaN(this.settings.fullMapStartListLimit)||this.settings.fullMapStartListLimit>26||this.settings.fullMapStartListLimit===-1))){storeNum=locationset.length;}
else{storeNum=_this.settings.storeLimit;}
if(_this.settings.pagination===true){storeNumToShow=_this.settings.locationsPerPage;storeStart=page*_this.settings.locationsPerPage;if((storeStart+storeNumToShow)>locationset.length){storeNumToShow=_this.settings.locationsPerPage-((storeStart+storeNumToShow)-locationset.length);}
locationset=locationset.slice(storeStart,storeStart+storeNumToShow);storeNum=locationset.length;}
else{storeNumToShow=storeNum;storeStart=0;}
_this.resultsTotalCount(locationset.length);if((_this.settings.fullMapStart===true&&firstRun===true&&_this.settings.querystringParams!==true)||(_this.settings.mapSettings.zoom===0)||(typeof origin==='undefined')||(distError===true)){myOptions=_this.settings.mapSettings;bounds=new google.maps.LatLngBounds();}
else if(_this.settings.pagination===true){var nextPoint=new google.maps.LatLng(locationset[0].lat,locationset[0].lng);if(page===0){_this.settings.mapSettings.center=originPoint;myOptions=_this.settings.mapSettings;}
else{_this.settings.mapSettings.center=nextPoint;myOptions=_this.settings.mapSettings;}}
else{_this.settings.mapSettings.center=originPoint;myOptions=_this.settings.mapSettings;myOptions.zoom=12;}
_this.map=new google.maps.Map(document.getElementById(_this.settings.mapID),myOptions);google.maps.event.addDomListener(window,'resize',function(){var center=_this.map.getCenter();google.maps.event.trigger(_this.map,'resize');_this.map.setCenter(center);});if(_this.settings.dragSearch===true){_this.map.addListener('dragend',function(){_this.dragSearch(_this.map);});}
$this.data(_this.settings.mapID.replace('#',''),_this.map);if(_this.settings.callbackMapSet){_this.settings.callbackMapSet.call(this,_this.map,originPoint,originalZoom,myOptions);}
if(typeof InfoBubble!=='undefined'&&_this.settings.infoBubble!==null){var infoBubbleSettings=_this.settings.infoBubble;infoBubbleSettings.map=_this.map;infowindow=new InfoBubble(infoBubbleSettings);}else{infowindow=new google.maps.InfoWindow();}
_this.originMarker(_this.map,origin,originPoint);$(document).on('click.'+pluginName,'.bh-sl-pagination li',function(e){e.preventDefault();_this.paginationChange($(this).attr('data-page'));});_this.inlineDirections(_this.map,origin);for(var y=0;y<=storeNumToShow-1;y++){var letter='';if(page>0){letter=String.fromCharCode('A'.charCodeAt(0)+(storeStart+y));}
else{letter=String.fromCharCode('A'.charCodeAt(0)+y);}
var point=new google.maps.LatLng(locationset[y].lat,locationset[y].lng);marker=_this.createMarker(point,locationset[y].name,locationset[y].address,letter,_this.map,locationset[y].category);marker.set('id',y);markers[y]=marker;if((_this.settings.fullMapStart===true&&firstRun===true&&_this.settings.querystringParams!==true)||(_this.settings.mapSettings.zoom===0)||(typeof origin==='undefined')||(distError===true)){bounds.extend(point);}
_this.createInfowindow(marker,null,infowindow,storeStart,page);}
if((_this.settings.fullMapStart===true&&firstRun===true&&_this.settings.querystringParams!==true)||(_this.settings.mapSettings.zoom===0)||(typeof origin==='undefined')||(distError===true)){_this.map.fitBounds(bounds);}
var locList=$('.'+_this.settings.locationList+' ul');locList.empty();if(firstRun&&_this.settings.fullMapStartListLimit!==false&&!isNaN(_this.settings.fullMapStartListLimit)&&_this.settings.fullMapStartListLimit!==-1){for(var m=0;m<_this.settings.fullMapStartListLimit;m++){var currentMarker=markers[m];_this.listSetup(currentMarker,storeStart,page);}}else{$(markers).each(function(x){var currentMarker=markers[x];_this.listSetup(currentMarker,storeStart,page);});}
if(typeof MarkerClusterer!=='undefined'&&_this.settings.markerCluster!==null){var markerCluster=new MarkerClusterer(_this.map,markers,_this.settings.markerCluster);}
_this.listClick(_this.map,infowindow,storeStart,page);$('.'+_this.settings.locationList+' ul > li:even').css('background',_this.settings.listColor1);$('.'+_this.settings.locationList+' ul > li:odd').css('background',_this.settings.listColor2);_this.visibleMarkersList(_this.map,markers);if(_this.settings.modal===true&&_this.settings.callbackModalReady){_this.settings.callbackModalReady.call(this);}
if(_this.settings.callbackFilters){_this.settings.callbackFilters.call(this,filters);}},writeDebug:function(){if(window.console&&this.settings.debug){if(Function.prototype.bind){this.writeDebug=Function.prototype.bind.call(console.log,console,'StoreLocator :');}else{this.writeDebug=function(){arguments[0]='StoreLocator : '+arguments[0];Function.prototype.apply.call(console.log,console,arguments);};}
this.writeDebug.apply(this,arguments);}}});$.fn[pluginName]=function(options){var args=arguments;if(options===undefined||typeof options==='object'){return this.each(function(){if(!$.data(this,'plugin_'+pluginName)){$.data(this,'plugin_'+pluginName,new Plugin(this,options));}});}else if(typeof options==='string'&&options[0]!=='_'&&options!=='init'){var returns;this.each(function(){var instance=$.data(this,'plugin_'+pluginName);if(instance instanceof Plugin&&typeof instance[options]==='function'){returns=instance[options].apply(instance,Array.prototype.slice.call(args,1));}
if(options==='destroy'){$.data(this,'plugin_'+pluginName,null);}});return returns!==undefined?returns:this;}};$(".js-example-placeholder-single").select2({placeholder:"Seleccionar",allowClear:true});})(jQuery,window,document);